<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Albert的博客</title>
  
  <subtitle>相逢一醉是前缘，风雨散，飘然何处。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://guowupeng.com/"/>
  <updated>2017-09-21T02:00:27.784Z</updated>
  <id>http://guowupeng.com/</id>
  
  <author>
    <name>Albert</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>更改Ubuntu默认python版本的两种方法</title>
    <link href="http://guowupeng.com/2017/07/25/%E6%9B%B4%E6%94%B9Ubuntu%E9%BB%98%E8%AE%A4python%E7%89%88%E6%9C%AC%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://guowupeng.com/2017/07/25/更改Ubuntu默认python版本的两种方法/</id>
    <published>2017-07-25T02:53:18.000Z</published>
    <updated>2017-09-21T02:00:27.784Z</updated>
    
    <content type="html"><![CDATA[<hr><p>使用 ls 命令来查看系统中都有那些 Python 的二进制文件可供使用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'ls /usr/bin/python*'</span></div></pre></td></tr></table></figure></p><p>查看默认的 Python 版本信息<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'python --version'</span></div></pre></td></tr></table></figure></p><a id="more"></a><p>在系统级修改 Python 版本</p><p>使用 update-alternatives 来为整个系统更改 Python 版本。以 root 身份登录，首先罗列出所有可用的 python 替代版本信息<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'update-alternatives --list python'</span></div></pre></td></tr></table></figure></p><p>将 python2.7 和 python3.5 放入其中<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">'update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1'</span></div><div class="line"><span class="string">'update-alternatives --install /usr/bin/python python /usr/bin/python3.5 2'</span></div><div class="line"><span class="comment">#【--install 选项使用了多个参数用于创建符号链接。最后一个参数指定了此选项的优先级，如果我们没有手动来设置替代选项，那么具有最高优先级的选项就会被选中】</span></div></pre></td></tr></table></figure></p><p>列出可用的 Python 替代版本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'update-alternatives --list python'</span></div></pre></td></tr></table></figure></p><p>使用下方的命令随时在列出的 Python 替代版本中任意切换<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'update-alternatives --config python'</span></div></pre></td></tr></table></figure></p><p>移除替代版本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'update-alternatives --remove python /usr/bin/python2.7'</span></div></pre></td></tr></table></figure></p><!--more-->]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;使用 ls 命令来查看系统中都有那些 Python 的二进制文件可供使用&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;ls /usr/bin/python*&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看默认的 Python 版本信息&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;python --version&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://guowupeng.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="随笔" scheme="http://guowupeng.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Git学习笔记</title>
    <link href="http://guowupeng.com/2017/07/21/git%E9%9A%8F%E7%AC%94/"/>
    <id>http://guowupeng.com/2017/07/21/git随笔/</id>
    <published>2017-07-21T02:43:53.000Z</published>
    <updated>2017-09-21T02:45:31.869Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Liunx上安装Git"><a href="#在Liunx上安装Git" class="headerlink" title="在Liunx上安装Git"></a>在Liunx上安装Git</h2><p>Ubuntu安装:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure></p><p>Centos安装:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install git</div></pre></td></tr></table></figure></p><h2 id="在Windows上安装Git"><a href="#在Windows上安装Git" class="headerlink" title="在Windows上安装Git"></a>在Windows上安装Git</h2><p>前往<a href="https://git-for-windows.github.io/" target="_blank" rel="external">git Download</a>下载</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，在命令行输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"your name"</span></div><div class="line">$ git config --global user.email <span class="string">"email@example.com"</span></div></pre></td></tr></table></figure><a id="more"></a><h2 id="Git-常用命令速查表"><a href="#Git-常用命令速查表" class="headerlink" title="Git 常用命令速查表"></a>Git 常用命令速查表</h2><p><img src="/assets/images/git.jpg" alt="Git常用命令速查表"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir sugar</div><div class="line">$ <span class="built_in">cd</span> sugar</div><div class="line">$ <span class="built_in">pwd</span>(用于显示当前目录)</div></pre></td></tr></table></figure><h3 id="通过git-init-命令把目录变成Git可以管理的仓库"><a href="#通过git-init-命令把目录变成Git可以管理的仓库" class="headerlink" title="通过git init 命令把目录变成Git可以管理的仓库"></a>通过git init 命令把目录变成Git可以管理的仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init</div></pre></td></tr></table></figure><h3 id="把文件添加到版本库"><a href="#把文件添加到版本库" class="headerlink" title="把文件添加到版本库"></a>把文件添加到版本库</h3><h4 id="编写文件-vi-readme-txt"><a href="#编写文件-vi-readme-txt" class="headerlink" title="编写文件(vi  readme.txt)"></a>编写文件(vi  readme.txt)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">    Git is a version control system.</div><div class="line">    Git is free software.</div><div class="line">```bash</div><div class="line"><span class="comment">#### 用命令git add &lt;file&gt;将文件添加到仓库</span></div><div class="line">```bash</div><div class="line">    git add  readme.txt</div><div class="line">    注：git add &lt;file&gt; &lt;file&gt;可反复多次使用，添加多个文件</div></pre></td></tr></table></figure><h4 id="用命令git-commit-将文件提交到仓库"><a href="#用命令git-commit-将文件提交到仓库" class="headerlink" title="用命令git commit 将文件提交到仓库"></a>用命令git commit 将文件提交到仓库</h4><p>&gt;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git commit -m <span class="string">"wrote a  readme file"</span></div><div class="line">注：-m后面输入的是本次提交的说明</div></pre></td></tr></table></figure></p><h3 id="掌握工作区的状态"><a href="#掌握工作区的状态" class="headerlink" title="掌握工作区的状态"></a>掌握工作区的状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.使用git status命令查看仓库当前的状态</div><div class="line">2.使用git diff(或git diff HEAD -- file)可以查看工作区和版本库里最新版本的区别</div></pre></td></tr></table></figure><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1.使用git <span class="built_in">log</span>查看提交历史</div><div class="line">【注：git <span class="built_in">log</span> --pretty=oneline(或git <span class="built_in">log</span> --oneline)可减少信息显示】</div><div class="line">2.git reset --hard HEAD(当前版本),git reset --hard HEAD^(回退到上一个版本)</div><div class="line">【注：HEAD指向的版本就是当前版本,因此,可以使用命令git reset --hard commit_id在版本的历史之间穿梭;且往上100个版本可写成HEAD~100】</div><div class="line">3.使用git reflog查看命令历史</div></pre></td></tr></table></figure><h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">使用git checkout -- file丢弃工作区的修改</div><div class="line">使用git reset HEAD file可以把暂存区的修改撤销掉(unstage)，重新放回工作区</div><div class="line">【注：撤销修改前提是没有推送到远程库】</div></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">使用rm file命令删除文件</div><div class="line">注意：1.确实要从版本库中删除该文件,用命令git rm file删掉,并且git commit</div><div class="line">      2.误删文件恢复到最新版本git checkout -- file</div></pre></td></tr></table></figure><h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><h4 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail@example.com（自己的邮箱地址）"</span>,接下来点击enter键即可（也可以输入密码）</div><div class="line">在Key文本框里粘贴id_rsa.pub文件的内容</div><div class="line">(注：在用户主目录下,存在.ssh目录,目录下存在id_rsa(私钥)和id_rsa.pub(公钥)这两个文件，跳过此步骤。如果不存在，打开Shell（Windows下打开Git Bash）,创建SSH Key)</div></pre></td></tr></table></figure><h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">使用命令git remote add origin git@server-name:path/repo-name.git关联一个远程库</div><div class="line">(注：origin是远程库的名字,git的默认叫法,可改)</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">关联后,使用命令git push -u origin master第一次推送master分支的所有内容</div><div class="line">(注：由于远程库是空的,第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令,之后可直接使用git push origin master推送)</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">    强制覆盖本地文件(如果远程库与本地文件重复)</div><div class="line">    git fetch --all <span class="comment">#下载远程的库的内容</span></div><div class="line">    git reset --hard origin/master <span class="comment">#把HEAD指向刚刚下载的最新的版本</span></div><div class="line">    git pull origin master</div><div class="line">```   </div><div class="line"><span class="comment">#### SSH警告</span></div><div class="line">```bash</div><div class="line">    第一次使用Git的<span class="built_in">clone</span>或者push命令连接GitHub时，会得到一个警告</div><div class="line">    The authenticity of host <span class="string">'github.com (xx.xx.xx.xx)'</span> can<span class="string">'t be established.</span></div><div class="line"><span class="string">    RSA key fingerprint is xx.xx.xx.xx.xx.</span></div><div class="line"><span class="string">    Are you sure you want to continue connecting (yes/no)?</span></div><div class="line"><span class="string">    这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。</span></div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了</div><div class="line">Warning: Permanently added <span class="string">'github.com'</span> (RSA) to the list of known hosts.</div><div class="line">(注：这个警告只会出现一次，后面的操作就不会有任何警告了.)</div></pre></td></tr></table></figure><h4 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">使用git <span class="built_in">clone</span> git@server-name:path/repo-name.git命令克隆</div><div class="line">(注：Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议)</div></pre></td></tr></table></figure><h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><h4 id="创建与合并分支"><a href="#创建与合并分支" class="headerlink" title="创建与合并分支"></a>创建与合并分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">    查看分支：git branch</div><div class="line">    创建分支：git branch &lt;name&gt;</div><div class="line">    切换分支：git checkout &lt;name&gt;</div><div class="line">    创建+切换分支：git checkout -b &lt;name&gt;</div><div class="line">    合并某分支到当前分支：git merge &lt;name&gt;</div><div class="line">    删除分支：git branch -d &lt;name&gt;</div><div class="line">```   </div><div class="line"><span class="comment">#### 解决冲突</span></div><div class="line">```bash</div><div class="line">    当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</div><div class="line">    用git <span class="built_in">log</span> --graph(git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit)命令可以看到分支合并图</div></pre></td></tr></table></figure><h4 id="分支管理策略-合并分支时Git会用Fast-forward模式-这种模式下-删除分支后-会丢掉分支信息"><a href="#分支管理策略-合并分支时Git会用Fast-forward模式-这种模式下-删除分支后-会丢掉分支信息" class="headerlink" title="分支管理策略(合并分支时Git会用Fast forward模式,这种模式下,删除分支后,会丢掉分支信息)"></a>分支管理策略(合并分支时Git会用Fast forward模式,这种模式下,删除分支后,会丢掉分支信息)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">切换回master分支,并使用命令git merge --no-ff -m <span class="string">"merge with no-ff"</span> &lt;name&gt;合并分支</div><div class="line">(准备合并分支时,强制禁用Fast forward模式,请使用--no-ff参数;因为本次合并要创建一个新的commit，所以加上-m参数，把commit描述写进去)</div></pre></td></tr></table></figure><h4 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">使用命令git stash,可以把当前工作现场“储藏”起来,修复完bug后,再git stash pop,回到工作现场</div><div class="line">使用命令git stash list查看stash内容,恢复指定的stash,用命令git stash apply stash@&#123;0&#125;</div><div class="line">(注:用git stash apply恢复,stash内容并不删除,还需用git stash drop来删除;用git stash pop,恢复的同时把储藏的stash内容也删除)</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">例:1.储藏当前工作现场(dev分支):git stash</div><div class="line">   2.切换到需要修复的bug(master)分支:git checkout master</div><div class="line">   3.从bug(master)分支创建临时分支(issue-101):git checkout -b issue-101</div><div class="line">   4.修复bug后,对修改内容进行commit提交后,切换回master分支:git checkout master</div><div class="line">   5.合并修复后的分支:git merge --no-ff -m <span class="string">"merged bug fix 101"</span> issue-101</div><div class="line">   6.删除issue-101分支:git branch -d issue-101</div><div class="line">   7.切换回工作现场:git checkout dev</div><div class="line">   8.查看stash内容:git stash list</div><div class="line">   9.恢复stash内容:git stash pop(或者用命令git stash apply stash@&#123;0&#125;恢复指定stash,但要用git stash drop删除stash内容)</div></pre></td></tr></table></figure><h4 id="Feature分支"><a href="#Feature分支" class="headerlink" title="Feature分支"></a>Feature分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">丢弃一个没有被合并过的分支,通过git branch -D &lt;name&gt;强行删除</div><div class="line">(注:git branch -d &lt;name&gt;只能删除合并后的分支)</div></pre></td></tr></table></figure><h4 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">查看远程库的信息用git remote -v(注:会显示可以抓取和推送的远程库地址,如果没有推送权限,就看不到push的地址)</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">从本地推送分支,使用git push origin branch-name,如果推送失败,先用git pull抓取远程的新提交</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在本地创建和远程分支对应的分支,使用git checkout -b branch-name origin/branch-name,本地和远程分支的名称最好一致</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">建立本地分支和远程分支的关联,使用git branch --<span class="built_in">set</span>-upstream branch-name origin/branch-name</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">    从远程抓取分支,使用git pull,如果有冲突,要先处理冲突</div><div class="line">```   </div><div class="line"></div><div class="line"><span class="comment">### 标签管理</span></div><div class="line"><span class="comment">#### 创建标签</span></div><div class="line">```bash</div><div class="line">    命令git tag &lt;name&gt;用于新建一个标签,默认为HEAD,也可以指定一个commit id(git tag &lt;name&gt; commitId)</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">创建带有说明的标签,用-a指定标签名,-m指定说明文字,-s用私钥签名一个标签</div><div class="line">指定标签信息:git tag -a &lt;tagname&gt; -m <span class="string">"blablabla..."</span> commitId</div><div class="line">用私钥签名一个标签:git tag -s &lt;tagname&gt; -m <span class="string">"blablabla..."</span> commitId</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">命令git tag可以查看所有标签</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git show &lt;tagname&gt;查看标签信息</div></pre></td></tr></table></figure><h4 id="操作标签"><a href="#操作标签" class="headerlink" title="操作标签"></a>操作标签</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">推送一个本地标签:git push origin &lt;tagname&gt;</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">推送全部未推送过的本地标签:git push origin --tags</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">删除本地标签:git tag -d &lt;tagname&gt;</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">删除一个远程标签:git push origin :refs/tags/&lt;tagname&gt;</div><div class="line">(注:删除远程标签要先删除本地标签)</div></pre></td></tr></table></figure><h4 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global <span class="built_in">alias</span>.别名 checkout</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">例:</div><div class="line">    配置git co,切换分支:git config --global alias.co checkout</div><div class="line">    配置git ci,提交说明:git config --global alias.ci commit</div><div class="line">    配置git br,显示分支信息:git config --global alias.br branch</div><div class="line">    配置git last,让其显示最后一次提交信息:git config --global alias.last <span class="string">'log -1'</span></div><div class="line">    配置git lg:git config --global alias.lg <span class="string">"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit"</span></div></pre></td></tr></table></figure><!--more-->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在Liunx上安装Git&quot;&gt;&lt;a href=&quot;#在Liunx上安装Git&quot; class=&quot;headerlink&quot; title=&quot;在Liunx上安装Git&quot;&gt;&lt;/a&gt;在Liunx上安装Git&lt;/h2&gt;&lt;p&gt;Ubuntu安装:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Centos安装:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo yum install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;在Windows上安装Git&quot;&gt;&lt;a href=&quot;#在Windows上安装Git&quot; class=&quot;headerlink&quot; title=&quot;在Windows上安装Git&quot;&gt;&lt;/a&gt;在Windows上安装Git&lt;/h2&gt;&lt;p&gt;前往&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git Download&lt;/a&gt;下载&lt;/p&gt;
&lt;p&gt;安装完成后，在开始菜单里找到“Git”-&amp;gt;“Git Bash”，在命令行输入:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;your name&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;email@example.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://guowupeng.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="随笔" scheme="http://guowupeng.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Liunx随笔</title>
    <link href="http://guowupeng.com/2016/08/10/Liunx%E9%9A%8F%E7%AC%94/"/>
    <id>http://guowupeng.com/2016/08/10/Liunx随笔/</id>
    <published>2016-08-10T05:04:50.000Z</published>
    <updated>2017-09-21T02:15:10.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网站根目录权限遵循"><a href="#网站根目录权限遵循" class="headerlink" title="网站根目录权限遵循"></a>网站根目录权限遵循</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">文件 644， 文件夹 755 ，权限用户和用户组www </div><div class="line">如出现文件权限问题时，请执行下面 3  条命令：</div><div class="line">chown -R www.www /data/wwwroot/</div><div class="line">find /data/wwwroot/ -<span class="built_in">type</span> d -<span class="built_in">exec</span> chmod 755 &#123;&#125; \;</div><div class="line">find /data/wwwroot/ -<span class="built_in">type</span> f -<span class="built_in">exec</span> chmod 644 &#123;&#125; \;</div></pre></td></tr></table></figure><a id="more"></a><!--more-->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网站根目录权限遵循&quot;&gt;&lt;a href=&quot;#网站根目录权限遵循&quot; class=&quot;headerlink&quot; title=&quot;网站根目录权限遵循&quot;&gt;&lt;/a&gt;网站根目录权限遵循&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;文件 644， 文件夹 755 ，权限用户和用户组www &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;如出现文件权限问题时，请执行下面 3  条命令：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;chown -R www.www /data/wwwroot/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;find /data/wwwroot/ -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; d -&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; chmod 755 &amp;#123;&amp;#125; \;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;find /data/wwwroot/ -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; f -&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; chmod 644 &amp;#123;&amp;#125; \;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Liunx" scheme="http://guowupeng.com/categories/Liunx/"/>
    
    
      <category term="随笔" scheme="http://guowupeng.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>HEXO搭建个人博客(笔记)</title>
    <link href="http://guowupeng.com/2016/05/20/HEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://guowupeng.com/2016/05/20/HEXO搭建个人博客/</id>
    <published>2016-05-20T02:00:00.000Z</published>
    <updated>2017-09-22T02:57:55.016Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客对每个人的作用不一样,<br>有的是为了对自我成长的一个记录,<br>有的是为了将其当做展示自我平台,<br>不管怎么说,通过这个平台,可以结交很多的博友,并在博友之间提高自己的影响力！</p><p><img src="/assets/images/diary-2.jpg" alt="枫林"></p><a id="more"></a><p>hexo常用的命令,#后面为注释<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ <span class="string">'hexo g'</span> <span class="comment">#完整命令为hexo generate，用于生成静态文件</span></div><div class="line">$ <span class="string">'hexo s'</span> <span class="comment">#完整命令为hexo server，用于启动服务器，主要用来本地预览</span></div><div class="line">$ <span class="string">'hexo d'</span> <span class="comment">#完整命令为hexo deploy，用于将本地文件发布到github上</span></div><div class="line">$ <span class="string">'hexo n'</span> <span class="comment">#完整命令为hexo new，用于新建一篇文章</span></div><div class="line">$ <span class="string">'hexo new "postName"'</span> <span class="comment">#新建文章</span></div><div class="line">$ <span class="string">'hexo new page "pageName"'</span> <span class="comment">#新建页面</span></div><div class="line">$ <span class="string">'hexo generate'</span> <span class="comment">#生成静态页面至public目录</span></div><div class="line">$ <span class="string">'hexo help'</span>  <span class="comment">#查看帮助</span></div><div class="line">$ <span class="string">'hexo version'</span>  <span class="comment">#查看Hexo的版本</span></div></pre></td></tr></table></figure></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><ul><li style="list-style: none"><input type="checkbox" checked> 安装Node:前往Node.js[官网]下载最新版本(<a href="https://nodejs.org/en/)安装" target="_blank" rel="external">https://nodejs.org/en/)安装</a></li><li style="list-style: none"><input type="checkbox" checked> 安装Git:前往<a href="https://git-for-windows.github.io/" target="_blank" rel="external">git Download</a>下载(安装教程配置等请自行百度)</li><li style="list-style: none"><input type="checkbox" checked> 申请GitHub账号</li></ul><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install -g hexo <span class="comment">#(ubuntu系统)</span></div><div class="line">$ npm install -g hexo <span class="comment">#(windows系统)</span></div></pre></td></tr></table></figure><h3 id="初始化-创建一个文件夹，如：Blog-cd到Blog里执行hexo-init命令"><a href="#初始化-创建一个文件夹，如：Blog-cd到Blog里执行hexo-init命令" class="headerlink" title="初始化(创建一个文件夹，如：Blog,cd到Blog里执行hexo init命令)"></a>初始化(创建一个文件夹，如：Blog,cd到Blog里执行hexo init命令)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure><h3 id="文章创建步骤"><a href="#文章创建步骤" class="headerlink" title="文章创建步骤"></a>文章创建步骤</h3><h4 id="生成静态页面-继续再Blog目录下执行如下命令，生成静态页面"><a href="#生成静态页面-继续再Blog目录下执行如下命令，生成静态页面" class="headerlink" title="生成静态页面(继续再Blog目录下执行如下命令，生成静态页面)"></a>生成静态页面(继续再Blog目录下执行如下命令，生成静态页面)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><h4 id="本地启动-启动本地服务，进行文章预览调试，命令"><a href="#本地启动-启动本地服务，进行文章预览调试，命令" class="headerlink" title="本地启动(启动本地服务，进行文章预览调试，命令)"></a>本地启动(启动本地服务，进行文章预览调试，命令)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><h4 id="手动配置"><a href="#手动配置" class="headerlink" title="手动配置"></a>手动配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-renderer-ejs --save</div><div class="line">$ npm install hexo-renderer-stylus --save</div><div class="line">$ npm install hexo-renderer-marked --save</div></pre></td></tr></table></figure><h4 id="github需要修改配置文件-config-yml"><a href="#github需要修改配置文件-config-yml" class="headerlink" title="github需要修改配置文件_config.yml"></a>github需要修改配置文件_config.yml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git #类型</div><div class="line">  repository: git@github.com:######/######.git #ssh路径</div><div class="line">  branch: gh-pages #分支</div></pre></td></tr></table></figure><h4 id="使用git部署命令"><a href="#使用git部署命令" class="headerlink" title="使用git部署命令"></a>使用git部署命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure><h4 id="部署步骤-更新文章等操作每次以以下步骤进行"><a href="#部署步骤-更新文章等操作每次以以下步骤进行" class="headerlink" title="部署步骤(更新文章等操作每次以以下步骤进行)"></a>部署步骤(更新文章等操作每次以以下步骤进行)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div><div class="line"></div><div class="line">#或使用复合命令</div><div class="line">$ hexo deploy -g </div><div class="line">$ hexo server -g</div></pre></td></tr></table></figure><!--more-->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;博客对每个人的作用不一样,&lt;br&gt;有的是为了对自我成长的一个记录,&lt;br&gt;有的是为了将其当做展示自我平台,&lt;br&gt;不管怎么说,通过这个平台,可以结交很多的博友,并在博友之间提高自己的影响力！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/diary-2.jpg&quot; alt=&quot;枫林&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://guowupeng.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="随笔" scheme="http://guowupeng.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
